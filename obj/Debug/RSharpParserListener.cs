//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Research\NRefactory\NRefactory\ICSharpCode.NRefactory.Rava\Parser\RSharpParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace ICSharpCode.NRefactory.Rava.Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RSharpParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IRSharpParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_regular_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolated_regular_string([NotNull] RSharpParser.Interpolated_regular_stringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_regular_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolated_regular_string([NotNull] RSharpParser.Interpolated_regular_stringContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_base([NotNull] RSharpParser.Interface_baseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_base([NotNull] RSharpParser.Interface_baseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.unbound_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnbound_type_name([NotNull] RSharpParser.Unbound_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.unbound_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnbound_type_name([NotNull] RSharpParser.Unbound_type_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.general_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneral_catch_clause([NotNull] RSharpParser.General_catch_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.general_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneral_catch_clause([NotNull] RSharpParser.General_catch_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_type_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_type_list([NotNull] RSharpParser.Interface_type_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_type_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_type_list([NotNull] RSharpParser.Interface_type_listContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>pointerMemberAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointerMemberAccessExpression([NotNull] RSharpParser.PointerMemberAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointerMemberAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointerMemberAccessExpression([NotNull] RSharpParser.PointerMemberAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.indexer_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexer_declaration([NotNull] RSharpParser.Indexer_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.indexer_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexer_declaration([NotNull] RSharpParser.Indexer_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>invocationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvocationExpression([NotNull] RSharpParser.InvocationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>invocationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvocationExpression([NotNull] RSharpParser.InvocationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>importAliasDirective</c>
	/// labeled alternative in <see cref="RSharpParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportAliasDirective([NotNull] RSharpParser.ImportAliasDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>importAliasDirective</c>
	/// labeled alternative in <see cref="RSharpParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportAliasDirective([NotNull] RSharpParser.ImportAliasDirectiveContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constant_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant_declarators([NotNull] RSharpParser.Constant_declaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constant_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant_declarators([NotNull] RSharpParser.Constant_declaratorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_expression([NotNull] RSharpParser.Primary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_expression([NotNull] RSharpParser.Primary_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.local_constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_constant_declaration([NotNull] RSharpParser.Local_constant_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.local_constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_constant_declaration([NotNull] RSharpParser.Local_constant_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>anonymousTypeExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousTypeExpression([NotNull] RSharpParser.AnonymousTypeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>anonymousTypeExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousTypeExpression([NotNull] RSharpParser.AnonymousTypeExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.parameter_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_modifier([NotNull] RSharpParser.Parameter_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.parameter_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_modifier([NotNull] RSharpParser.Parameter_modifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_argument_list([NotNull] RSharpParser.Type_argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_argument_list([NotNull] RSharpParser.Type_argument_listContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>gotoStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotoStatement([NotNull] RSharpParser.GotoStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>gotoStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotoStatement([NotNull] RSharpParser.GotoStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_modifier([NotNull] RSharpParser.Type_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_modifier([NotNull] RSharpParser.Type_modifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeachStatement([NotNull] RSharpParser.ForeachStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeachStatement([NotNull] RSharpParser.ForeachStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.formal_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormal_parameter_list([NotNull] RSharpParser.Formal_parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.formal_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormal_parameter_list([NotNull] RSharpParser.Formal_parameter_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember_modifiers([NotNull] RSharpParser.Member_modifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember_modifiers([NotNull] RSharpParser.Member_modifiersContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>arrayCreationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayCreationExpression([NotNull] RSharpParser.ArrayCreationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayCreationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayCreationExpression([NotNull] RSharpParser.ArrayCreationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_expression([NotNull] RSharpParser.Query_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_expression([NotNull] RSharpParser.Query_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.raise_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRaise_accessor_declaration([NotNull] RSharpParser.Raise_accessor_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.raise_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRaise_accessor_declaration([NotNull] RSharpParser.Raise_accessor_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.struct_interfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_interfaces([NotNull] RSharpParser.Struct_interfacesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.struct_interfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_interfaces([NotNull] RSharpParser.Struct_interfacesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.switch_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitch_label([NotNull] RSharpParser.Switch_labelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.switch_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitch_label([NotNull] RSharpParser.Switch_labelContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Explicit_anonymous_function_parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Explicit_anonymous_function_parameter_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.secondary_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondary_constraints([NotNull] RSharpParser.Secondary_constraintsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.secondary_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondary_constraints([NotNull] RSharpParser.Secondary_constraintsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_body([NotNull] RSharpParser.Enum_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_body([NotNull] RSharpParser.Enum_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] RSharpParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] RSharpParser.RelationalExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.ordering"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrdering([NotNull] RSharpParser.OrderingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.ordering"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrdering([NotNull] RSharpParser.OrderingContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember_declarator([NotNull] RSharpParser.Member_declaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember_declarator([NotNull] RSharpParser.Member_declaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_literal([NotNull] RSharpParser.Boolean_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_literal([NotNull] RSharpParser.Boolean_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] RSharpParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] RSharpParser.ReturnStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.inclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusive_or_expression([NotNull] RSharpParser.Inclusive_or_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.inclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusive_or_expression([NotNull] RSharpParser.Inclusive_or_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.null_coalescing_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNull_coalescing_expression([NotNull] RSharpParser.Null_coalescing_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.null_coalescing_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNull_coalescing_expression([NotNull] RSharpParser.Null_coalescing_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] RSharpParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] RSharpParser.LiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.base_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBase_type([NotNull] RSharpParser.Base_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.base_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBase_type([NotNull] RSharpParser.Base_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.exception_filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterException_filter([NotNull] RSharpParser.Exception_filterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.exception_filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitException_filter([NotNull] RSharpParser.Exception_filterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_expression([NotNull] RSharpParser.Conditional_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_expression([NotNull] RSharpParser.Conditional_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>importPackageDirective</c>
	/// labeled alternative in <see cref="RSharpParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportPackageDirective([NotNull] RSharpParser.ImportPackageDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>importPackageDirective</c>
	/// labeled alternative in <see cref="RSharpParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportPackageDirective([NotNull] RSharpParser.ImportPackageDirectiveContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_body_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_body_clause([NotNull] RSharpParser.Query_body_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_body_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_body_clause([NotNull] RSharpParser.Query_body_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interrupt_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterrupt_definition([NotNull] RSharpParser.Interrupt_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interrupt_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterrupt_definition([NotNull] RSharpParser.Interrupt_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShift_expression([NotNull] RSharpParser.Shift_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShift_expression([NotNull] RSharpParser.Shift_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] RSharpParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] RSharpParser.AttributeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.if_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_body([NotNull] RSharpParser.If_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.if_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_body([NotNull] RSharpParser.If_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] RSharpParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] RSharpParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.fixed_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixed_parameter([NotNull] RSharpParser.Fixed_parameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.fixed_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixed_parameter([NotNull] RSharpParser.Fixed_parameterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>throwStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrowStatement([NotNull] RSharpParser.ThrowStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>throwStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrowStatement([NotNull] RSharpParser.ThrowStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_specifier([NotNull] RSharpParser.Type_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_specifier([NotNull] RSharpParser.Type_specifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.event_accessor_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_accessor_declarations([NotNull] RSharpParser.Event_accessor_declarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.event_accessor_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_accessor_declarations([NotNull] RSharpParser.Event_accessor_declarationsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_accessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_accessors([NotNull] RSharpParser.Interface_accessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_accessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_accessors([NotNull] RSharpParser.Interface_accessorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_member_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_member_declarations([NotNull] RSharpParser.Package_member_declarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_member_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_member_declarations([NotNull] RSharpParser.Package_member_declarationsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeofExpression([NotNull] RSharpParser.TypeofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeofExpression([NotNull] RSharpParser.TypeofExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_clause([NotNull] RSharpParser.Select_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_clause([NotNull] RSharpParser.Select_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constructor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructor_declaration([NotNull] RSharpParser.Constructor_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constructor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructor_declaration([NotNull] RSharpParser.Constructor_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conditional_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_or_expression([NotNull] RSharpParser.Conditional_or_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conditional_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_or_expression([NotNull] RSharpParser.Conditional_or_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.operator_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_declaration([NotNull] RSharpParser.Operator_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.operator_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_declaration([NotNull] RSharpParser.Operator_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_declaration([NotNull] RSharpParser.Type_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_declaration([NotNull] RSharpParser.Type_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_member_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_member_declarations([NotNull] RSharpParser.Class_member_declarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_member_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_member_declarations([NotNull] RSharpParser.Class_member_declarationsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>checkedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckedStatement([NotNull] RSharpParser.CheckedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>checkedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckedStatement([NotNull] RSharpParser.CheckedStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_parameter_constraints([NotNull] RSharpParser.Type_parameter_constraintsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_parameter_constraints([NotNull] RSharpParser.Type_parameter_constraintsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember_modifier([NotNull] RSharpParser.Member_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember_modifier([NotNull] RSharpParser.Member_modifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.lambda_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambda_expression([NotNull] RSharpParser.Lambda_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.lambda_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambda_expression([NotNull] RSharpParser.Lambda_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_declaration([NotNull] RSharpParser.Package_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_declaration([NotNull] RSharpParser.Package_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.let_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLet_clause([NotNull] RSharpParser.Let_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.let_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLet_clause([NotNull] RSharpParser.Let_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>tryFinallyStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTryFinallyStatement([NotNull] RSharpParser.TryFinallyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tryFinallyStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTryFinallyStatement([NotNull] RSharpParser.TryFinallyStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember_access([NotNull] RSharpParser.Member_accessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember_access([NotNull] RSharpParser.Member_accessContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_member_declaration([NotNull] RSharpParser.Class_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_member_declaration([NotNull] RSharpParser.Class_member_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_expression([NotNull] RSharpParser.And_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_expression([NotNull] RSharpParser.And_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>uncheckedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUncheckedStatement([NotNull] RSharpParser.UncheckedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>uncheckedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUncheckedStatement([NotNull] RSharpParser.UncheckedStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_member_declaration([NotNull] RSharpParser.Interface_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_member_declaration([NotNull] RSharpParser.Interface_member_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegral_type([NotNull] RSharpParser.Integral_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegral_type([NotNull] RSharpParser.Integral_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditive_expression([NotNull] RSharpParser.Additive_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditive_expression([NotNull] RSharpParser.Additive_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccessExpression([NotNull] RSharpParser.MemberAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccessExpression([NotNull] RSharpParser.MemberAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_definition([NotNull] RSharpParser.Enum_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_definition([NotNull] RSharpParser.Enum_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>relationalShiftExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalShiftExpression([NotNull] RSharpParser.RelationalShiftExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>relationalShiftExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalShiftExpression([NotNull] RSharpParser.RelationalShiftExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] RSharpParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] RSharpParser.KeywordContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicative_expression([NotNull] RSharpParser.Multiplicative_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicative_expression([NotNull] RSharpParser.Multiplicative_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute_argument([NotNull] RSharpParser.Attribute_argumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute_argument([NotNull] RSharpParser.Attribute_argumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conversion_operator_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConversion_operator_declarator([NotNull] RSharpParser.Conversion_operator_declaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conversion_operator_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConversion_operator_declarator([NotNull] RSharpParser.Conversion_operator_declaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_body([NotNull] RSharpParser.Class_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_body([NotNull] RSharpParser.Class_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.non_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_assignment_expression([NotNull] RSharpParser.Non_assignment_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.non_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_assignment_expression([NotNull] RSharpParser.Non_assignment_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_parameter_constraints_clauses([NotNull] RSharpParser.Type_parameter_constraints_clausesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_parameter_constraints_clauses([NotNull] RSharpParser.Type_parameter_constraints_clausesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.simple_name_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_name_access([NotNull] RSharpParser.Simple_name_accessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.simple_name_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_name_access([NotNull] RSharpParser.Simple_name_accessContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.qualified_alias_member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_alias_member([NotNull] RSharpParser.Qualified_alias_memberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.qualified_alias_member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_alias_member([NotNull] RSharpParser.Qualified_alias_memberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.primary_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_constraint([NotNull] RSharpParser.Primary_constraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.primary_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_constraint([NotNull] RSharpParser.Primary_constraintContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationStatement([NotNull] RSharpParser.DeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationStatement([NotNull] RSharpParser.DeclarationStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.common_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_member_declaration([NotNull] RSharpParser.Common_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.common_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_member_declaration([NotNull] RSharpParser.Common_member_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>asExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsExpression([NotNull] RSharpParser.AsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsExpression([NotNull] RSharpParser.AsExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>syncStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSyncStatement([NotNull] RSharpParser.SyncStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>syncStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSyncStatement([NotNull] RSharpParser.SyncStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.arg_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg_declaration([NotNull] RSharpParser.Arg_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.arg_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg_declaration([NotNull] RSharpParser.Arg_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_declarator([NotNull] RSharpParser.Variable_declaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_declarator([NotNull] RSharpParser.Variable_declaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.pointer_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_type([NotNull] RSharpParser.Pointer_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.pointer_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_type([NotNull] RSharpParser.Pointer_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.combined_join_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCombined_join_clause([NotNull] RSharpParser.Combined_join_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.combined_join_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCombined_join_clause([NotNull] RSharpParser.Combined_join_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.element_access_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement_access_expression([NotNull] RSharpParser.Element_access_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.element_access_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement_access_expression([NotNull] RSharpParser.Element_access_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredefined_type([NotNull] RSharpParser.Predefined_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredefined_type([NotNull] RSharpParser.Predefined_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_type([NotNull] RSharpParser.Simple_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_type([NotNull] RSharpParser.Simple_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>tryCatchStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTryCatchStatement([NotNull] RSharpParser.TryCatchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tryCatchStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTryCatchStatement([NotNull] RSharpParser.TryCatchStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.resource_acquisition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResource_acquisition([NotNull] RSharpParser.Resource_acquisitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.resource_acquisition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResource_acquisition([NotNull] RSharpParser.Resource_acquisitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conditional_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_and_expression([NotNull] RSharpParser.Conditional_and_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conditional_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_and_expression([NotNull] RSharpParser.Conditional_and_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolated_verbatium_string_part([NotNull] RSharpParser.Interpolated_verbatium_string_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolated_verbatium_string_part([NotNull] RSharpParser.Interpolated_verbatium_string_partContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_type([NotNull] RSharpParser.Array_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_type([NotNull] RSharpParser.Array_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.set_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_accessor_declaration([NotNull] RSharpParser.Set_accessor_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.set_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_accessor_declaration([NotNull] RSharpParser.Set_accessor_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>yieldBreakStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterYieldBreakStatement([NotNull] RSharpParser.YieldBreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>yieldBreakStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitYieldBreakStatement([NotNull] RSharpParser.YieldBreakStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.property_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty_declaration([NotNull] RSharpParser.Property_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.property_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty_declaration([NotNull] RSharpParser.Property_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_anonymous_function_parameter([NotNull] RSharpParser.Explicit_anonymous_function_parameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_anonymous_function_parameter([NotNull] RSharpParser.Explicit_anonymous_function_parameterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.remove_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRemove_accessor_declaration([NotNull] RSharpParser.Remove_accessor_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.remove_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRemove_accessor_declaration([NotNull] RSharpParser.Remove_accessor_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_or_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_or_type_name([NotNull] RSharpParser.Package_or_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_or_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_or_type_name([NotNull] RSharpParser.Package_or_type_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.generic_dimension_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_dimension_specifier([NotNull] RSharpParser.Generic_dimension_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.generic_dimension_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_dimension_specifier([NotNull] RSharpParser.Generic_dimension_specifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] RSharpParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] RSharpParser.IfStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.local_variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_variable_declarator([NotNull] RSharpParser.Local_variable_declaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.local_variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_variable_declarator([NotNull] RSharpParser.Local_variable_declaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExpressions([NotNull] RSharpParser.ParenthesisExpressionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExpressions([NotNull] RSharpParser.ParenthesisExpressionsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] RSharpParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] RSharpParser.WhileStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_member_declaration([NotNull] RSharpParser.Package_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_member_declaration([NotNull] RSharpParser.Package_member_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_body([NotNull] RSharpParser.Method_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_body([NotNull] RSharpParser.Method_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_parameter([NotNull] RSharpParser.Type_parameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_parameter([NotNull] RSharpParser.Type_parameterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_body([NotNull] RSharpParser.Interface_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_body([NotNull] RSharpParser.Interface_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant_declaration([NotNull] RSharpParser.Constant_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant_declaration([NotNull] RSharpParser.Constant_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.local_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_variable_declaration([NotNull] RSharpParser.Local_variable_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.local_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_variable_declaration([NotNull] RSharpParser.Local_variable_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>isExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsExpression([NotNull] RSharpParser.IsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>isExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsExpression([NotNull] RSharpParser.IsExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.anonymous_function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymous_function_body([NotNull] RSharpParser.Anonymous_function_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.anonymous_function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymous_function_body([NotNull] RSharpParser.Anonymous_function_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constant_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant_declarator([NotNull] RSharpParser.Constant_declaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constant_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant_declarator([NotNull] RSharpParser.Constant_declaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.for_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_initializer([NotNull] RSharpParser.For_initializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.for_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_initializer([NotNull] RSharpParser.For_initializerContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.struct_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_body([NotNull] RSharpParser.Struct_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.struct_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_body([NotNull] RSharpParser.Struct_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.specific_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecific_catch_clause([NotNull] RSharpParser.Specific_catch_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.specific_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecific_catch_clause([NotNull] RSharpParser.Specific_catch_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] RSharpParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] RSharpParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_type([NotNull] RSharpParser.Class_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_type([NotNull] RSharpParser.Class_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>memberAccessStartExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccessStartExpression([NotNull] RSharpParser.MemberAccessStartExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberAccessStartExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccessStartExpression([NotNull] RSharpParser.MemberAccessStartExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_type([NotNull] RSharpParser.Numeric_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_type([NotNull] RSharpParser.Numeric_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>mixinStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMixinStatement([NotNull] RSharpParser.MixinStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>mixinStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMixinStatement([NotNull] RSharpParser.MixinStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] RSharpParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] RSharpParser.ExpressionStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] RSharpParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] RSharpParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.get_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGet_accessor_declaration([NotNull] RSharpParser.Get_accessor_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.get_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGet_accessor_declaration([NotNull] RSharpParser.Get_accessor_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.overloadable_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOverloadable_operator([NotNull] RSharpParser.Overloadable_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.overloadable_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOverloadable_operator([NotNull] RSharpParser.Overloadable_operatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_operator([NotNull] RSharpParser.Assignment_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_operator([NotNull] RSharpParser.Assignment_operatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.accessor_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessor_declarations([NotNull] RSharpParser.Accessor_declarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.accessor_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessor_declarations([NotNull] RSharpParser.Accessor_declarationsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyStatement([NotNull] RSharpParser.EmptyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyStatement([NotNull] RSharpParser.EmptyStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.catch_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCatch_clauses([NotNull] RSharpParser.Catch_clausesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.catch_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCatch_clauses([NotNull] RSharpParser.Catch_clausesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] RSharpParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] RSharpParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultValueExpression([NotNull] RSharpParser.DefaultValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultValueExpression([NotNull] RSharpParser.DefaultValueExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_regular_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolated_regular_string_part([NotNull] RSharpParser.Interpolated_regular_string_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_regular_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolated_regular_string_part([NotNull] RSharpParser.Interpolated_regular_string_partContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_modifiers([NotNull] RSharpParser.Method_modifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_modifiers([NotNull] RSharpParser.Method_modifiersContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constructor_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructor_initializer([NotNull] RSharpParser.Constructor_initializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constructor_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructor_initializer([NotNull] RSharpParser.Constructor_initializerContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_base([NotNull] RSharpParser.Enum_baseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_base([NotNull] RSharpParser.Enum_baseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.exclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusive_or_expression([NotNull] RSharpParser.Exclusive_or_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.exclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusive_or_expression([NotNull] RSharpParser.Exclusive_or_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.global_attribute_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobal_attribute_section([NotNull] RSharpParser.Global_attribute_sectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.global_attribute_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobal_attribute_section([NotNull] RSharpParser.Global_attribute_sectionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>nameofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameofExpression([NotNull] RSharpParser.NameofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nameofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameofExpression([NotNull] RSharpParser.NameofExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.orderby_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderby_clause([NotNull] RSharpParser.Orderby_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.orderby_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderby_clause([NotNull] RSharpParser.Orderby_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>embeddedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmbeddedStatement([NotNull] RSharpParser.EmbeddedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>embeddedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmbeddedStatement([NotNull] RSharpParser.EmbeddedStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.finally_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinally_clause([NotNull] RSharpParser.Finally_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.finally_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinally_clause([NotNull] RSharpParser.Finally_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_body([NotNull] RSharpParser.Query_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_body([NotNull] RSharpParser.Query_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>restrictStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRestrictStatement([NotNull] RSharpParser.RestrictStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>restrictStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRestrictStatement([NotNull] RSharpParser.RestrictStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.variable_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_declarators([NotNull] RSharpParser.Variable_declaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.variable_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_declarators([NotNull] RSharpParser.Variable_declaratorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_definition([NotNull] RSharpParser.Interface_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_definition([NotNull] RSharpParser.Interface_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilation_unit([NotNull] RSharpParser.Compilation_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilation_unit([NotNull] RSharpParser.Compilation_unitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.parameter_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_array([NotNull] RSharpParser.Parameter_arrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.parameter_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_array([NotNull] RSharpParser.Parameter_arrayContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.variable_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_initializer([NotNull] RSharpParser.Variable_initializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.variable_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_initializer([NotNull] RSharpParser.Variable_initializerContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>labeledStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledStatement([NotNull] RSharpParser.LabeledStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>labeledStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledStatement([NotNull] RSharpParser.LabeledStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.add_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_accessor_declaration([NotNull] RSharpParser.Add_accessor_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.add_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_accessor_declaration([NotNull] RSharpParser.Add_accessor_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>usingStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingStatement([NotNull] RSharpParser.UsingStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>usingStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingStatement([NotNull] RSharpParser.UsingStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.mixin_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMixin_definition([NotNull] RSharpParser.Mixin_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.mixin_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMixin_definition([NotNull] RSharpParser.Mixin_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_clause([NotNull] RSharpParser.Group_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_clause([NotNull] RSharpParser.Group_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>whileElseStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileElseStatement([NotNull] RSharpParser.WhileElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>whileElseStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileElseStatement([NotNull] RSharpParser.WhileElseStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement_list([NotNull] RSharpParser.Statement_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement_list([NotNull] RSharpParser.Statement_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_string_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolated_string_expression([NotNull] RSharpParser.Interpolated_string_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_string_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolated_string_expression([NotNull] RSharpParser.Interpolated_string_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.destructor_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDestructor_definition([NotNull] RSharpParser.Destructor_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.destructor_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDestructor_definition([NotNull] RSharpParser.Destructor_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.field_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField_declaration([NotNull] RSharpParser.Field_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.field_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField_declaration([NotNull] RSharpParser.Field_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>unsafeStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsafeStatement([NotNull] RSharpParser.UnsafeStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unsafeStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsafeStatement([NotNull] RSharpParser.UnsafeStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] RSharpParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] RSharpParser.ForStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_definition([NotNull] RSharpParser.Class_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_definition([NotNull] RSharpParser.Class_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember_name([NotNull] RSharpParser.Member_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember_name([NotNull] RSharpParser.Member_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>postDecrementExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostDecrementExpression([NotNull] RSharpParser.PostDecrementExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postDecrementExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostDecrementExpression([NotNull] RSharpParser.PostDecrementExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_modifier([NotNull] RSharpParser.Method_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_modifier([NotNull] RSharpParser.Method_modifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute_section([NotNull] RSharpParser.Attribute_sectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute_section([NotNull] RSharpParser.Attribute_sectionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.object_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_creation_expression([NotNull] RSharpParser.Object_creation_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.object_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_creation_expression([NotNull] RSharpParser.Object_creation_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>doStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoStatement([NotNull] RSharpParser.DoStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>doStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoStatement([NotNull] RSharpParser.DoStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute_list([NotNull] RSharpParser.Attribute_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute_list([NotNull] RSharpParser.Attribute_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolated_verbatium_string([NotNull] RSharpParser.Interpolated_verbatium_stringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolated_verbatium_string([NotNull] RSharpParser.Interpolated_verbatium_stringContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_member_declaration([NotNull] RSharpParser.Enum_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_member_declaration([NotNull] RSharpParser.Enum_member_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributes([NotNull] RSharpParser.AttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributes([NotNull] RSharpParser.AttributesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.from_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrom_clause([NotNull] RSharpParser.From_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.from_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrom_clause([NotNull] RSharpParser.From_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_list([NotNull] RSharpParser.Argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_list([NotNull] RSharpParser.Argument_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.return_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_type([NotNull] RSharpParser.Return_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.return_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_type([NotNull] RSharpParser.Return_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] RSharpParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] RSharpParser.ArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_clause([NotNull] RSharpParser.Where_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_clause([NotNull] RSharpParser.Where_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>literalAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralAccessExpression([NotNull] RSharpParser.LiteralAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralAccessExpression([NotNull] RSharpParser.LiteralAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.array_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_initializer([NotNull] RSharpParser.Array_initializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.array_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_initializer([NotNull] RSharpParser.Array_initializerContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmbedded_statement([NotNull] RSharpParser.Embedded_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmbedded_statement([NotNull] RSharpParser.Embedded_statementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>sizeofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSizeofExpression([NotNull] RSharpParser.SizeofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sizeofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSizeofExpression([NotNull] RSharpParser.SizeofExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] RSharpParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] RSharpParser.BodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_expression([NotNull] RSharpParser.Unary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_expression([NotNull] RSharpParser.Unary_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_base([NotNull] RSharpParser.Class_baseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_base([NotNull] RSharpParser.Class_baseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.simple_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_name([NotNull] RSharpParser.Simple_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.simple_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_name([NotNull] RSharpParser.Simple_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.accessor_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessor_modifier([NotNull] RSharpParser.Accessor_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.accessor_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessor_modifier([NotNull] RSharpParser.Accessor_modifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.implicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Implicit_anonymous_function_parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.implicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Implicit_anonymous_function_parameter_listContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>gotoDefaultStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotoDefaultStatement([NotNull] RSharpParser.GotoDefaultStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>gotoDefaultStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotoDefaultStatement([NotNull] RSharpParser.GotoDefaultStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.select_or_group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_or_group_clause([NotNull] RSharpParser.Select_or_group_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.select_or_group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_or_group_clause([NotNull] RSharpParser.Select_or_group_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.binary_operator_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary_operator_expression([NotNull] RSharpParser.Binary_operator_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.binary_operator_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary_operator_expression([NotNull] RSharpParser.Binary_operator_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.for_iterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_iterator([NotNull] RSharpParser.For_iteratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.for_iterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_iterator([NotNull] RSharpParser.For_iteratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.global_attribute_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobal_attribute_target([NotNull] RSharpParser.Global_attribute_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.global_attribute_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobal_attribute_target([NotNull] RSharpParser.Global_attribute_targetContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_declaration([NotNull] RSharpParser.Method_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_declaration([NotNull] RSharpParser.Method_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>yieldReturnStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterYieldReturnStatement([NotNull] RSharpParser.YieldReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>yieldReturnStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitYieldReturnStatement([NotNull] RSharpParser.YieldReturnStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>superAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuperAccessExpression([NotNull] RSharpParser.SuperAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>superAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuperAccessExpression([NotNull] RSharpParser.SuperAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>anonymousMethodExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousMethodExpression([NotNull] RSharpParser.AnonymousMethodExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>anonymousMethodExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousMethodExpression([NotNull] RSharpParser.AnonymousMethodExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>objectOrDelegateCreationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectOrDelegateCreationExpression([NotNull] RSharpParser.ObjectOrDelegateCreationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>objectOrDelegateCreationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectOrDelegateCreationExpression([NotNull] RSharpParser.ObjectOrDelegateCreationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_parameter_constraints_clause([NotNull] RSharpParser.Type_parameter_constraints_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_parameter_constraints_clause([NotNull] RSharpParser.Type_parameter_constraints_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.indexer_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexer_argument([NotNull] RSharpParser.Indexer_argumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.indexer_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexer_argument([NotNull] RSharpParser.Indexer_argumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnion_definition([NotNull] RSharpParser.Union_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnion_definition([NotNull] RSharpParser.Union_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_invocation([NotNull] RSharpParser.Method_invocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_invocation([NotNull] RSharpParser.Method_invocationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.default_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefault_member_declaration([NotNull] RSharpParser.Default_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.default_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefault_member_declaration([NotNull] RSharpParser.Default_member_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>postIncrementExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostIncrementExpression([NotNull] RSharpParser.PostIncrementExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postIncrementExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostIncrementExpression([NotNull] RSharpParser.PostIncrementExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloating_point_type([NotNull] RSharpParser.Floating_point_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloating_point_type([NotNull] RSharpParser.Floating_point_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.equality_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality_expression([NotNull] RSharpParser.Equality_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.equality_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality_expression([NotNull] RSharpParser.Equality_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.fixed_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixed_parameters([NotNull] RSharpParser.Fixed_parametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.fixed_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixed_parameters([NotNull] RSharpParser.Fixed_parametersContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] RSharpParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] RSharpParser.SwitchStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.delegate_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDelegate_definition([NotNull] RSharpParser.Delegate_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.delegate_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDelegate_definition([NotNull] RSharpParser.Delegate_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>adressofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdressofExpression([NotNull] RSharpParser.AdressofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>adressofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdressofExpression([NotNull] RSharpParser.AdressofExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.event_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_declaration([NotNull] RSharpParser.Event_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.event_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_declaration([NotNull] RSharpParser.Event_declarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.bracket_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBracket_expression([NotNull] RSharpParser.Bracket_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.bracket_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBracket_expression([NotNull] RSharpParser.Bracket_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleNameExpression([NotNull] RSharpParser.SimpleNameExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleNameExpression([NotNull] RSharpParser.SimpleNameExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_list([NotNull] RSharpParser.Expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_list([NotNull] RSharpParser.Expression_listContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>checkedExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckedExpression([NotNull] RSharpParser.CheckedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>checkedExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckedExpression([NotNull] RSharpParser.CheckedExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.import_directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_directives([NotNull] RSharpParser.Import_directivesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.import_directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_directives([NotNull] RSharpParser.Import_directivesContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>gotoCaseStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotoCaseStatement([NotNull] RSharpParser.GotoCaseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>gotoCaseStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotoCaseStatement([NotNull] RSharpParser.GotoCaseStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute_target([NotNull] RSharpParser.Attribute_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute_target([NotNull] RSharpParser.Attribute_targetContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.qualified_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_identifier([NotNull] RSharpParser.Qualified_identifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.qualified_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_identifier([NotNull] RSharpParser.Qualified_identifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.switch_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitch_section([NotNull] RSharpParser.Switch_sectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.switch_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitch_section([NotNull] RSharpParser.Switch_sectionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.anonymous_function_signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymous_function_signature([NotNull] RSharpParser.Anonymous_function_signatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.anonymous_function_signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymous_function_signature([NotNull] RSharpParser.Anonymous_function_signatureContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_parameter_list([NotNull] RSharpParser.Type_parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_parameter_list([NotNull] RSharpParser.Type_parameter_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] RSharpParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] RSharpParser.AssignmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_modifiers([NotNull] RSharpParser.Type_modifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_modifiers([NotNull] RSharpParser.Type_modifiersContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_continuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_continuation([NotNull] RSharpParser.Query_continuationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_continuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_continuation([NotNull] RSharpParser.Query_continuationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] RSharpParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] RSharpParser.BreakStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_body([NotNull] RSharpParser.Package_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_body([NotNull] RSharpParser.Package_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>selfReferenceExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelfReferenceExpression([NotNull] RSharpParser.SelfReferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>selfReferenceExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelfReferenceExpression([NotNull] RSharpParser.SelfReferenceExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.string_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_literal([NotNull] RSharpParser.String_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.string_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_literal([NotNull] RSharpParser.String_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>uncheckedExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUncheckedExpression([NotNull] RSharpParser.UncheckedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>uncheckedExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUncheckedExpression([NotNull] RSharpParser.UncheckedExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.struct_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_definition([NotNull] RSharpParser.Struct_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.struct_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_definition([NotNull] RSharpParser.Struct_definitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.accessor_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessor_body([NotNull] RSharpParser.Accessor_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.accessor_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessor_body([NotNull] RSharpParser.Accessor_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] RSharpParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] RSharpParser.ContinueStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpression([NotNull] RSharpParser.LiteralExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpression([NotNull] RSharpParser.LiteralExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.rank_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRank_specifier([NotNull] RSharpParser.Rank_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.rank_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRank_specifier([NotNull] RSharpParser.Rank_specifierContext context);
}
} // namespace ICSharpCode.NRefactory.Rava.Parser
