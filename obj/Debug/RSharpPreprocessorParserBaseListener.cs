//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Research\NRefactory\NRefactory\ICSharpCode.NRefactory.Rava\Parser\RSharpPreprocessorParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace ICSharpCode.NRefactory.Rava.Parser {
 using System.Linq; 

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRSharpPreprocessorParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class RSharpPreprocessorParserBaseListener : IRSharpPreprocessorParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorDiagnostic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorDiagnostic([NotNull] RSharpPreprocessorParser.PreprocessorDiagnosticContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorDiagnostic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorDiagnostic([NotNull] RSharpPreprocessorParser.PreprocessorDiagnosticContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessor_expression([NotNull] RSharpPreprocessorParser.Preprocessor_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessor_expression([NotNull] RSharpPreprocessorParser.Preprocessor_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorRegion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorRegion([NotNull] RSharpPreprocessorParser.PreprocessorRegionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorRegion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorRegion([NotNull] RSharpPreprocessorParser.PreprocessorRegionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.directive_new_line_or_sharp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirective_new_line_or_sharp([NotNull] RSharpPreprocessorParser.Directive_new_line_or_sharpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.directive_new_line_or_sharp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirective_new_line_or_sharp([NotNull] RSharpPreprocessorParser.Directive_new_line_or_sharpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorDeclaration([NotNull] RSharpPreprocessorParser.PreprocessorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorDeclaration([NotNull] RSharpPreprocessorParser.PreprocessorDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorConditional"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorConditional([NotNull] RSharpPreprocessorParser.PreprocessorConditionalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorConditional"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorConditional([NotNull] RSharpPreprocessorParser.PreprocessorConditionalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorPragma"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorPragma([NotNull] RSharpPreprocessorParser.PreprocessorPragmaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorPragma"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorPragma([NotNull] RSharpPreprocessorParser.PreprocessorPragmaContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorLine([NotNull] RSharpPreprocessorParser.PreprocessorLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpPreprocessorParser.preprocessorLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorLine([NotNull] RSharpPreprocessorParser.PreprocessorLineContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ICSharpCode.NRefactory.Rava.Parser
