//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Research\NRefactory\NRefactory\ICSharpCode.NRefactory.Rava\Parser\RSharpParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace ICSharpCode.NRefactory.Rava.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="RSharpParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IRSharpParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interpolated_regular_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_regular_string([NotNull] RSharpParser.Interpolated_regular_stringContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interface_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_base([NotNull] RSharpParser.Interface_baseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.unbound_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnbound_type_name([NotNull] RSharpParser.Unbound_type_nameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.general_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneral_catch_clause([NotNull] RSharpParser.General_catch_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interface_type_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_type_list([NotNull] RSharpParser.Interface_type_listContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>pointerMemberAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPointerMemberAccessExpression([NotNull] RSharpParser.PointerMemberAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.indexer_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexer_declaration([NotNull] RSharpParser.Indexer_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>invocationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvocationExpression([NotNull] RSharpParser.InvocationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>importAliasDirective</c>
	/// labeled alternative in <see cref="RSharpParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportAliasDirective([NotNull] RSharpParser.ImportAliasDirectiveContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.constant_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant_declarators([NotNull] RSharpParser.Constant_declaratorsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_expression([NotNull] RSharpParser.Primary_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.local_constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_constant_declaration([NotNull] RSharpParser.Local_constant_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>anonymousTypeExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymousTypeExpression([NotNull] RSharpParser.AnonymousTypeExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.parameter_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter_modifier([NotNull] RSharpParser.Parameter_modifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_argument_list([NotNull] RSharpParser.Type_argument_listContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>gotoStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGotoStatement([NotNull] RSharpParser.GotoStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_modifier([NotNull] RSharpParser.Type_modifierContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachStatement([NotNull] RSharpParser.ForeachStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.formal_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormal_parameter_list([NotNull] RSharpParser.Formal_parameter_listContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.member_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_modifiers([NotNull] RSharpParser.Member_modifiersContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>arrayCreationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayCreationExpression([NotNull] RSharpParser.ArrayCreationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.query_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery_expression([NotNull] RSharpParser.Query_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.raise_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRaise_accessor_declaration([NotNull] RSharpParser.Raise_accessor_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.struct_interfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct_interfaces([NotNull] RSharpParser.Struct_interfacesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.switch_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_label([NotNull] RSharpParser.Switch_labelContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Explicit_anonymous_function_parameter_listContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.secondary_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSecondary_constraints([NotNull] RSharpParser.Secondary_constraintsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.enum_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnum_body([NotNull] RSharpParser.Enum_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] RSharpParser.RelationalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.ordering"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrdering([NotNull] RSharpParser.OrderingContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.member_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_declarator([NotNull] RSharpParser.Member_declaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean_literal([NotNull] RSharpParser.Boolean_literalContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] RSharpParser.ReturnStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.inclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInclusive_or_expression([NotNull] RSharpParser.Inclusive_or_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.null_coalescing_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNull_coalescing_expression([NotNull] RSharpParser.Null_coalescing_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] RSharpParser.LiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.base_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBase_type([NotNull] RSharpParser.Base_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.exception_filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitException_filter([NotNull] RSharpParser.Exception_filterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_expression([NotNull] RSharpParser.Conditional_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>importPackageDirective</c>
	/// labeled alternative in <see cref="RSharpParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportPackageDirective([NotNull] RSharpParser.ImportPackageDirectiveContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.query_body_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery_body_clause([NotNull] RSharpParser.Query_body_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interrupt_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterrupt_definition([NotNull] RSharpParser.Interrupt_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShift_expression([NotNull] RSharpParser.Shift_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute([NotNull] RSharpParser.AttributeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.if_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_body([NotNull] RSharpParser.If_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] RSharpParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.fixed_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixed_parameter([NotNull] RSharpParser.Fixed_parameterContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>throwStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowStatement([NotNull] RSharpParser.ThrowStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_specifier([NotNull] RSharpParser.Type_specifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.event_accessor_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEvent_accessor_declarations([NotNull] RSharpParser.Event_accessor_declarationsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interface_accessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_accessors([NotNull] RSharpParser.Interface_accessorsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.package_member_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPackage_member_declarations([NotNull] RSharpParser.Package_member_declarationsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>typeofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofExpression([NotNull] RSharpParser.TypeofExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelect_clause([NotNull] RSharpParser.Select_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.constructor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructor_declaration([NotNull] RSharpParser.Constructor_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.conditional_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_or_expression([NotNull] RSharpParser.Conditional_or_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.operator_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_declaration([NotNull] RSharpParser.Operator_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_declaration([NotNull] RSharpParser.Type_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.class_member_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_member_declarations([NotNull] RSharpParser.Class_member_declarationsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>checkedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCheckedStatement([NotNull] RSharpParser.CheckedStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_constraints([NotNull] RSharpParser.Type_parameter_constraintsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.member_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_modifier([NotNull] RSharpParser.Member_modifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.lambda_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambda_expression([NotNull] RSharpParser.Lambda_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.package_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPackage_declaration([NotNull] RSharpParser.Package_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.let_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLet_clause([NotNull] RSharpParser.Let_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>tryFinallyStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryFinallyStatement([NotNull] RSharpParser.TryFinallyStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.member_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_access([NotNull] RSharpParser.Member_accessContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.class_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_member_declaration([NotNull] RSharpParser.Class_member_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnd_expression([NotNull] RSharpParser.And_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>uncheckedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUncheckedStatement([NotNull] RSharpParser.UncheckedStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interface_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_member_declaration([NotNull] RSharpParser.Interface_member_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegral_type([NotNull] RSharpParser.Integral_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditive_expression([NotNull] RSharpParser.Additive_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccessExpression([NotNull] RSharpParser.MemberAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.enum_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnum_definition([NotNull] RSharpParser.Enum_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>relationalShiftExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalShiftExpression([NotNull] RSharpParser.RelationalShiftExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyword([NotNull] RSharpParser.KeywordContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicative_expression([NotNull] RSharpParser.Multiplicative_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.attribute_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_argument([NotNull] RSharpParser.Attribute_argumentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.conversion_operator_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConversion_operator_declarator([NotNull] RSharpParser.Conversion_operator_declaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.class_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_body([NotNull] RSharpParser.Class_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.non_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNon_assignment_expression([NotNull] RSharpParser.Non_assignment_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_constraints_clauses([NotNull] RSharpParser.Type_parameter_constraints_clausesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.simple_name_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_name_access([NotNull] RSharpParser.Simple_name_accessContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.qualified_alias_member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualified_alias_member([NotNull] RSharpParser.Qualified_alias_memberContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.primary_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_constraint([NotNull] RSharpParser.Primary_constraintContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationStatement([NotNull] RSharpParser.DeclarationStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.common_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommon_member_declaration([NotNull] RSharpParser.Common_member_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>asExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsExpression([NotNull] RSharpParser.AsExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>syncStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSyncStatement([NotNull] RSharpParser.SyncStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.arg_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArg_declaration([NotNull] RSharpParser.Arg_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_declarator([NotNull] RSharpParser.Variable_declaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.pointer_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPointer_type([NotNull] RSharpParser.Pointer_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.combined_join_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCombined_join_clause([NotNull] RSharpParser.Combined_join_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.element_access_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElement_access_expression([NotNull] RSharpParser.Element_access_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredefined_type([NotNull] RSharpParser.Predefined_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_type([NotNull] RSharpParser.Simple_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>tryCatchStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryCatchStatement([NotNull] RSharpParser.TryCatchStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.resource_acquisition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResource_acquisition([NotNull] RSharpParser.Resource_acquisitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.conditional_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_and_expression([NotNull] RSharpParser.Conditional_and_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_verbatium_string_part([NotNull] RSharpParser.Interpolated_verbatium_string_partContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray_type([NotNull] RSharpParser.Array_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.set_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSet_accessor_declaration([NotNull] RSharpParser.Set_accessor_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>yieldBreakStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitYieldBreakStatement([NotNull] RSharpParser.YieldBreakStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.property_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProperty_declaration([NotNull] RSharpParser.Property_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicit_anonymous_function_parameter([NotNull] RSharpParser.Explicit_anonymous_function_parameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.remove_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRemove_accessor_declaration([NotNull] RSharpParser.Remove_accessor_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.package_or_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPackage_or_type_name([NotNull] RSharpParser.Package_or_type_nameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.generic_dimension_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneric_dimension_specifier([NotNull] RSharpParser.Generic_dimension_specifierContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] RSharpParser.IfStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.local_variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_variable_declarator([NotNull] RSharpParser.Local_variable_declaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesisExpressions([NotNull] RSharpParser.ParenthesisExpressionsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] RSharpParser.WhileStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.package_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPackage_member_declaration([NotNull] RSharpParser.Package_member_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.method_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_body([NotNull] RSharpParser.Method_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter([NotNull] RSharpParser.Type_parameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interface_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_body([NotNull] RSharpParser.Interface_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.constant_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant_declaration([NotNull] RSharpParser.Constant_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.local_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_variable_declaration([NotNull] RSharpParser.Local_variable_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>isExpression</c>
	/// labeled alternative in <see cref="RSharpParser.relational_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsExpression([NotNull] RSharpParser.IsExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.anonymous_function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_function_body([NotNull] RSharpParser.Anonymous_function_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.constant_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant_declarator([NotNull] RSharpParser.Constant_declaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.for_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_initializer([NotNull] RSharpParser.For_initializerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.struct_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct_body([NotNull] RSharpParser.Struct_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.specific_catch_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpecific_catch_clause([NotNull] RSharpParser.Specific_catch_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] RSharpParser.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_type([NotNull] RSharpParser.Class_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>memberAccessStartExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccessStartExpression([NotNull] RSharpParser.MemberAccessStartExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumeric_type([NotNull] RSharpParser.Numeric_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>mixinStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMixinStatement([NotNull] RSharpParser.MixinStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] RSharpParser.ExpressionStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] RSharpParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.get_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGet_accessor_declaration([NotNull] RSharpParser.Get_accessor_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.overloadable_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOverloadable_operator([NotNull] RSharpParser.Overloadable_operatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment_operator([NotNull] RSharpParser.Assignment_operatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.accessor_declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessor_declarations([NotNull] RSharpParser.Accessor_declarationsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyStatement([NotNull] RSharpParser.EmptyStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.catch_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatch_clauses([NotNull] RSharpParser.Catch_clausesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] RSharpParser.IdentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultValueExpression([NotNull] RSharpParser.DefaultValueExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interpolated_regular_string_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_regular_string_part([NotNull] RSharpParser.Interpolated_regular_string_partContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.method_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_modifiers([NotNull] RSharpParser.Method_modifiersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.constructor_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructor_initializer([NotNull] RSharpParser.Constructor_initializerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.enum_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnum_base([NotNull] RSharpParser.Enum_baseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.exclusive_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExclusive_or_expression([NotNull] RSharpParser.Exclusive_or_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.global_attribute_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobal_attribute_section([NotNull] RSharpParser.Global_attribute_sectionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>nameofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameofExpression([NotNull] RSharpParser.NameofExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.orderby_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrderby_clause([NotNull] RSharpParser.Orderby_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>embeddedStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmbeddedStatement([NotNull] RSharpParser.EmbeddedStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.finally_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFinally_clause([NotNull] RSharpParser.Finally_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.query_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery_body([NotNull] RSharpParser.Query_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>restrictStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRestrictStatement([NotNull] RSharpParser.RestrictStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.variable_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_declarators([NotNull] RSharpParser.Variable_declaratorsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interface_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_definition([NotNull] RSharpParser.Interface_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilation_unit([NotNull] RSharpParser.Compilation_unitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.parameter_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter_array([NotNull] RSharpParser.Parameter_arrayContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.variable_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_initializer([NotNull] RSharpParser.Variable_initializerContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>labeledStatement</c>
	/// labeled alternative in <see cref="RSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabeledStatement([NotNull] RSharpParser.LabeledStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.add_accessor_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdd_accessor_declaration([NotNull] RSharpParser.Add_accessor_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>usingStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingStatement([NotNull] RSharpParser.UsingStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.mixin_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMixin_definition([NotNull] RSharpParser.Mixin_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroup_clause([NotNull] RSharpParser.Group_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>whileElseStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileElseStatement([NotNull] RSharpParser.WhileElseStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement_list([NotNull] RSharpParser.Statement_listContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interpolated_string_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_string_expression([NotNull] RSharpParser.Interpolated_string_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.destructor_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDestructor_definition([NotNull] RSharpParser.Destructor_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.field_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField_declaration([NotNull] RSharpParser.Field_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unsafeStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsafeStatement([NotNull] RSharpParser.UnsafeStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] RSharpParser.ForStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.class_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_definition([NotNull] RSharpParser.Class_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.member_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_name([NotNull] RSharpParser.Member_nameContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>postDecrementExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostDecrementExpression([NotNull] RSharpParser.PostDecrementExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.method_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_modifier([NotNull] RSharpParser.Method_modifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.attribute_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_section([NotNull] RSharpParser.Attribute_sectionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.object_creation_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObject_creation_expression([NotNull] RSharpParser.Object_creation_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>doStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoStatement([NotNull] RSharpParser.DoStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.attribute_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_list([NotNull] RSharpParser.Attribute_listContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolated_verbatium_string([NotNull] RSharpParser.Interpolated_verbatium_stringContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.enum_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnum_member_declaration([NotNull] RSharpParser.Enum_member_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttributes([NotNull] RSharpParser.AttributesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.from_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFrom_clause([NotNull] RSharpParser.From_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_list([NotNull] RSharpParser.Argument_listContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.return_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_type([NotNull] RSharpParser.Return_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] RSharpParser.ArgumentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhere_clause([NotNull] RSharpParser.Where_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>literalAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralAccessExpression([NotNull] RSharpParser.LiteralAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.array_initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray_initializer([NotNull] RSharpParser.Array_initializerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmbedded_statement([NotNull] RSharpParser.Embedded_statementContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>sizeofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSizeofExpression([NotNull] RSharpParser.SizeofExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody([NotNull] RSharpParser.BodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_expression([NotNull] RSharpParser.Unary_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.class_base"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_base([NotNull] RSharpParser.Class_baseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.simple_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_name([NotNull] RSharpParser.Simple_nameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.accessor_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessor_modifier([NotNull] RSharpParser.Accessor_modifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.implicit_anonymous_function_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Implicit_anonymous_function_parameter_listContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>gotoDefaultStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGotoDefaultStatement([NotNull] RSharpParser.GotoDefaultStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.select_or_group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelect_or_group_clause([NotNull] RSharpParser.Select_or_group_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.binary_operator_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinary_operator_expression([NotNull] RSharpParser.Binary_operator_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.for_iterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_iterator([NotNull] RSharpParser.For_iteratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.global_attribute_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobal_attribute_target([NotNull] RSharpParser.Global_attribute_targetContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_declaration([NotNull] RSharpParser.Method_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>yieldReturnStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitYieldReturnStatement([NotNull] RSharpParser.YieldReturnStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>superAccessExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSuperAccessExpression([NotNull] RSharpParser.SuperAccessExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>anonymousMethodExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymousMethodExpression([NotNull] RSharpParser.AnonymousMethodExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>objectOrDelegateCreationExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectOrDelegateCreationExpression([NotNull] RSharpParser.ObjectOrDelegateCreationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_constraints_clause([NotNull] RSharpParser.Type_parameter_constraints_clauseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.indexer_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexer_argument([NotNull] RSharpParser.Indexer_argumentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnion_definition([NotNull] RSharpParser.Union_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.method_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_invocation([NotNull] RSharpParser.Method_invocationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.default_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefault_member_declaration([NotNull] RSharpParser.Default_member_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>postIncrementExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostIncrementExpression([NotNull] RSharpParser.PostIncrementExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloating_point_type([NotNull] RSharpParser.Floating_point_typeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.equality_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality_expression([NotNull] RSharpParser.Equality_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.fixed_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixed_parameters([NotNull] RSharpParser.Fixed_parametersContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] RSharpParser.SwitchStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.delegate_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDelegate_definition([NotNull] RSharpParser.Delegate_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>adressofExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdressofExpression([NotNull] RSharpParser.AdressofExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.event_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEvent_declaration([NotNull] RSharpParser.Event_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.bracket_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBracket_expression([NotNull] RSharpParser.Bracket_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleNameExpression([NotNull] RSharpParser.SimpleNameExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_list([NotNull] RSharpParser.Expression_listContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>checkedExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCheckedExpression([NotNull] RSharpParser.CheckedExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.import_directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImport_directives([NotNull] RSharpParser.Import_directivesContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>gotoCaseStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGotoCaseStatement([NotNull] RSharpParser.GotoCaseStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.attribute_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute_target([NotNull] RSharpParser.Attribute_targetContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.qualified_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualified_identifier([NotNull] RSharpParser.Qualified_identifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.switch_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_section([NotNull] RSharpParser.Switch_sectionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.anonymous_function_signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_function_signature([NotNull] RSharpParser.Anonymous_function_signatureContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_list([NotNull] RSharpParser.Type_parameter_listContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] RSharpParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.type_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_modifiers([NotNull] RSharpParser.Type_modifiersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.query_continuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery_continuation([NotNull] RSharpParser.Query_continuationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] RSharpParser.BreakStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.package_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPackage_body([NotNull] RSharpParser.Package_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>selfReferenceExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelfReferenceExpression([NotNull] RSharpParser.SelfReferenceExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.string_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString_literal([NotNull] RSharpParser.String_literalContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>uncheckedExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUncheckedExpression([NotNull] RSharpParser.UncheckedExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.struct_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct_definition([NotNull] RSharpParser.Struct_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.accessor_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessor_body([NotNull] RSharpParser.Accessor_bodyContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="RSharpParser.simple_embedded_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] RSharpParser.ContinueStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="RSharpParser.primary_expression_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] RSharpParser.LiteralExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RSharpParser.rank_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRank_specifier([NotNull] RSharpParser.Rank_specifierContext context);
}
} // namespace ICSharpCode.NRefactory.Rava.Parser
