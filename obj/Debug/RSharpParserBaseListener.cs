//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Research\NRefactory\NRefactory\ICSharpCode.NRefactory.Rava\Parser\RSharpParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace ICSharpCode.NRefactory.Rava.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRSharpParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class RSharpParserBaseListener : IRSharpParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_regular_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_regular_string([NotNull] RSharpParser.Interpolated_regular_stringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_regular_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_regular_string([NotNull] RSharpParser.Interpolated_regular_stringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_base([NotNull] RSharpParser.Interface_baseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_base([NotNull] RSharpParser.Interface_baseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.unbound_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnbound_type_name([NotNull] RSharpParser.Unbound_type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.unbound_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnbound_type_name([NotNull] RSharpParser.Unbound_type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.general_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneral_catch_clause([NotNull] RSharpParser.General_catch_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.general_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneral_catch_clause([NotNull] RSharpParser.General_catch_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_type_list([NotNull] RSharpParser.Interface_type_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_type_list([NotNull] RSharpParser.Interface_type_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.pointerMemberAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerMemberAccessExpression([NotNull] RSharpParser.PointerMemberAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.pointerMemberAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerMemberAccessExpression([NotNull] RSharpParser.PointerMemberAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.indexer_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexer_declaration([NotNull] RSharpParser.Indexer_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.indexer_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexer_declaration([NotNull] RSharpParser.Indexer_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.invocationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvocationExpression([NotNull] RSharpParser.InvocationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.invocationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvocationExpression([NotNull] RSharpParser.InvocationExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.importAliasDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportAliasDirective([NotNull] RSharpParser.ImportAliasDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.importAliasDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportAliasDirective([NotNull] RSharpParser.ImportAliasDirectiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constant_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant_declarators([NotNull] RSharpParser.Constant_declaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constant_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant_declarators([NotNull] RSharpParser.Constant_declaratorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expression([NotNull] RSharpParser.Primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expression([NotNull] RSharpParser.Primary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.local_constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_constant_declaration([NotNull] RSharpParser.Local_constant_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.local_constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_constant_declaration([NotNull] RSharpParser.Local_constant_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.anonymousTypeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousTypeExpression([NotNull] RSharpParser.AnonymousTypeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.anonymousTypeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousTypeExpression([NotNull] RSharpParser.AnonymousTypeExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.parameter_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_modifier([NotNull] RSharpParser.Parameter_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.parameter_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_modifier([NotNull] RSharpParser.Parameter_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_argument_list([NotNull] RSharpParser.Type_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_argument_list([NotNull] RSharpParser.Type_argument_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStatement([NotNull] RSharpParser.GotoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStatement([NotNull] RSharpParser.GotoStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_modifier([NotNull] RSharpParser.Type_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_modifier([NotNull] RSharpParser.Type_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.foreachStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachStatement([NotNull] RSharpParser.ForeachStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.foreachStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachStatement([NotNull] RSharpParser.ForeachStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.formal_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormal_parameter_list([NotNull] RSharpParser.Formal_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.formal_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormal_parameter_list([NotNull] RSharpParser.Formal_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_modifiers([NotNull] RSharpParser.Member_modifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_modifiers([NotNull] RSharpParser.Member_modifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.arrayCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayCreationExpression([NotNull] RSharpParser.ArrayCreationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.arrayCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayCreationExpression([NotNull] RSharpParser.ArrayCreationExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_expression([NotNull] RSharpParser.Query_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_expression([NotNull] RSharpParser.Query_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.raise_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaise_accessor_declaration([NotNull] RSharpParser.Raise_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.raise_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaise_accessor_declaration([NotNull] RSharpParser.Raise_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.struct_interfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_interfaces([NotNull] RSharpParser.Struct_interfacesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.struct_interfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_interfaces([NotNull] RSharpParser.Struct_interfacesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.switch_label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_label([NotNull] RSharpParser.Switch_labelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.switch_label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_label([NotNull] RSharpParser.Switch_labelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Explicit_anonymous_function_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Explicit_anonymous_function_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.secondary_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSecondary_constraints([NotNull] RSharpParser.Secondary_constraintsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.secondary_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSecondary_constraints([NotNull] RSharpParser.Secondary_constraintsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_body([NotNull] RSharpParser.Enum_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_body([NotNull] RSharpParser.Enum_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] RSharpParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] RSharpParser.RelationalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrdering([NotNull] RSharpParser.OrderingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrdering([NotNull] RSharpParser.OrderingContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_declarator([NotNull] RSharpParser.Member_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_declarator([NotNull] RSharpParser.Member_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_literal([NotNull] RSharpParser.Boolean_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_literal([NotNull] RSharpParser.Boolean_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] RSharpParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] RSharpParser.ReturnStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusive_or_expression([NotNull] RSharpParser.Inclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusive_or_expression([NotNull] RSharpParser.Inclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.null_coalescing_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNull_coalescing_expression([NotNull] RSharpParser.Null_coalescing_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.null_coalescing_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNull_coalescing_expression([NotNull] RSharpParser.Null_coalescing_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] RSharpParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] RSharpParser.LiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_type([NotNull] RSharpParser.Base_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_type([NotNull] RSharpParser.Base_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.exception_filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterException_filter([NotNull] RSharpParser.Exception_filterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.exception_filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitException_filter([NotNull] RSharpParser.Exception_filterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_expression([NotNull] RSharpParser.Conditional_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_expression([NotNull] RSharpParser.Conditional_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.importPackageDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportPackageDirective([NotNull] RSharpParser.ImportPackageDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.importPackageDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportPackageDirective([NotNull] RSharpParser.ImportPackageDirectiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_body_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_body_clause([NotNull] RSharpParser.Query_body_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_body_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_body_clause([NotNull] RSharpParser.Query_body_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interrupt_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterrupt_definition([NotNull] RSharpParser.Interrupt_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interrupt_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterrupt_definition([NotNull] RSharpParser.Interrupt_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_expression([NotNull] RSharpParser.Shift_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_expression([NotNull] RSharpParser.Shift_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] RSharpParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] RSharpParser.AttributeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.if_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_body([NotNull] RSharpParser.If_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.if_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_body([NotNull] RSharpParser.If_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] RSharpParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] RSharpParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.fixed_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_parameter([NotNull] RSharpParser.Fixed_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.fixed_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_parameter([NotNull] RSharpParser.Fixed_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.throwStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowStatement([NotNull] RSharpParser.ThrowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.throwStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowStatement([NotNull] RSharpParser.ThrowStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_specifier([NotNull] RSharpParser.Type_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_specifier([NotNull] RSharpParser.Type_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.event_accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvent_accessor_declarations([NotNull] RSharpParser.Event_accessor_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.event_accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvent_accessor_declarations([NotNull] RSharpParser.Event_accessor_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_accessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_accessors([NotNull] RSharpParser.Interface_accessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_accessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_accessors([NotNull] RSharpParser.Interface_accessorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_member_declarations([NotNull] RSharpParser.Package_member_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_member_declarations([NotNull] RSharpParser.Package_member_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.typeofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeofExpression([NotNull] RSharpParser.TypeofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.typeofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeofExpression([NotNull] RSharpParser.TypeofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_clause([NotNull] RSharpParser.Select_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_clause([NotNull] RSharpParser.Select_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constructor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_declaration([NotNull] RSharpParser.Constructor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constructor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_declaration([NotNull] RSharpParser.Constructor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conditional_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_or_expression([NotNull] RSharpParser.Conditional_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conditional_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_or_expression([NotNull] RSharpParser.Conditional_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.operator_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator_declaration([NotNull] RSharpParser.Operator_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.operator_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator_declaration([NotNull] RSharpParser.Operator_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_declaration([NotNull] RSharpParser.Type_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_declaration([NotNull] RSharpParser.Type_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_member_declarations([NotNull] RSharpParser.Class_member_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_member_declarations([NotNull] RSharpParser.Class_member_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.checkedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCheckedStatement([NotNull] RSharpParser.CheckedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.checkedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCheckedStatement([NotNull] RSharpParser.CheckedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_constraints([NotNull] RSharpParser.Type_parameter_constraintsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_constraints([NotNull] RSharpParser.Type_parameter_constraintsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_modifier([NotNull] RSharpParser.Member_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_modifier([NotNull] RSharpParser.Member_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.lambda_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLambda_expression([NotNull] RSharpParser.Lambda_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.lambda_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLambda_expression([NotNull] RSharpParser.Lambda_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_declaration([NotNull] RSharpParser.Package_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_declaration([NotNull] RSharpParser.Package_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.let_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLet_clause([NotNull] RSharpParser.Let_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.let_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLet_clause([NotNull] RSharpParser.Let_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.tryFinallyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTryFinallyStatement([NotNull] RSharpParser.TryFinallyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.tryFinallyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTryFinallyStatement([NotNull] RSharpParser.TryFinallyStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_access([NotNull] RSharpParser.Member_accessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_access([NotNull] RSharpParser.Member_accessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_member_declaration([NotNull] RSharpParser.Class_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_member_declaration([NotNull] RSharpParser.Class_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_expression([NotNull] RSharpParser.And_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_expression([NotNull] RSharpParser.And_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.uncheckedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUncheckedStatement([NotNull] RSharpParser.UncheckedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.uncheckedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUncheckedStatement([NotNull] RSharpParser.UncheckedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_member_declaration([NotNull] RSharpParser.Interface_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_member_declaration([NotNull] RSharpParser.Interface_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.integral_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegral_type([NotNull] RSharpParser.Integral_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.integral_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegral_type([NotNull] RSharpParser.Integral_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_expression([NotNull] RSharpParser.Additive_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_expression([NotNull] RSharpParser.Additive_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.memberAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccessExpression([NotNull] RSharpParser.MemberAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.memberAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccessExpression([NotNull] RSharpParser.MemberAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_definition([NotNull] RSharpParser.Enum_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_definition([NotNull] RSharpParser.Enum_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.relationalShiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalShiftExpression([NotNull] RSharpParser.RelationalShiftExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.relationalShiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalShiftExpression([NotNull] RSharpParser.RelationalShiftExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] RSharpParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] RSharpParser.KeywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicative_expression([NotNull] RSharpParser.Multiplicative_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicative_expression([NotNull] RSharpParser.Multiplicative_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_argument([NotNull] RSharpParser.Attribute_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_argument([NotNull] RSharpParser.Attribute_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conversion_operator_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversion_operator_declarator([NotNull] RSharpParser.Conversion_operator_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conversion_operator_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversion_operator_declarator([NotNull] RSharpParser.Conversion_operator_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_body([NotNull] RSharpParser.Class_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_body([NotNull] RSharpParser.Class_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.non_assignment_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_assignment_expression([NotNull] RSharpParser.Non_assignment_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.non_assignment_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_assignment_expression([NotNull] RSharpParser.Non_assignment_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_constraints_clauses([NotNull] RSharpParser.Type_parameter_constraints_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_constraints_clauses([NotNull] RSharpParser.Type_parameter_constraints_clausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.simple_name_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_name_access([NotNull] RSharpParser.Simple_name_accessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.simple_name_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_name_access([NotNull] RSharpParser.Simple_name_accessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.qualified_alias_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_alias_member([NotNull] RSharpParser.Qualified_alias_memberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.qualified_alias_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_alias_member([NotNull] RSharpParser.Qualified_alias_memberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.primary_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_constraint([NotNull] RSharpParser.Primary_constraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.primary_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_constraint([NotNull] RSharpParser.Primary_constraintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.declarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationStatement([NotNull] RSharpParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.declarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationStatement([NotNull] RSharpParser.DeclarationStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.common_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommon_member_declaration([NotNull] RSharpParser.Common_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.common_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommon_member_declaration([NotNull] RSharpParser.Common_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.asExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsExpression([NotNull] RSharpParser.AsExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.asExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsExpression([NotNull] RSharpParser.AsExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.syncStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSyncStatement([NotNull] RSharpParser.SyncStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.syncStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSyncStatement([NotNull] RSharpParser.SyncStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.arg_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg_declaration([NotNull] RSharpParser.Arg_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.arg_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg_declaration([NotNull] RSharpParser.Arg_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declarator([NotNull] RSharpParser.Variable_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declarator([NotNull] RSharpParser.Variable_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.pointer_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointer_type([NotNull] RSharpParser.Pointer_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.pointer_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointer_type([NotNull] RSharpParser.Pointer_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.combined_join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCombined_join_clause([NotNull] RSharpParser.Combined_join_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.combined_join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCombined_join_clause([NotNull] RSharpParser.Combined_join_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.element_access_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement_access_expression([NotNull] RSharpParser.Element_access_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.element_access_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement_access_expression([NotNull] RSharpParser.Element_access_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredefined_type([NotNull] RSharpParser.Predefined_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredefined_type([NotNull] RSharpParser.Predefined_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.simple_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_type([NotNull] RSharpParser.Simple_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.simple_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_type([NotNull] RSharpParser.Simple_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.tryCatchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTryCatchStatement([NotNull] RSharpParser.TryCatchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.tryCatchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTryCatchStatement([NotNull] RSharpParser.TryCatchStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.resource_acquisition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResource_acquisition([NotNull] RSharpParser.Resource_acquisitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.resource_acquisition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResource_acquisition([NotNull] RSharpParser.Resource_acquisitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.conditional_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_and_expression([NotNull] RSharpParser.Conditional_and_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.conditional_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_and_expression([NotNull] RSharpParser.Conditional_and_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_verbatium_string_part([NotNull] RSharpParser.Interpolated_verbatium_string_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_verbatium_string_part([NotNull] RSharpParser.Interpolated_verbatium_string_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.array_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray_type([NotNull] RSharpParser.Array_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.array_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray_type([NotNull] RSharpParser.Array_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.set_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_accessor_declaration([NotNull] RSharpParser.Set_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.set_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_accessor_declaration([NotNull] RSharpParser.Set_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.yieldBreakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterYieldBreakStatement([NotNull] RSharpParser.YieldBreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.yieldBreakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitYieldBreakStatement([NotNull] RSharpParser.YieldBreakStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.property_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty_declaration([NotNull] RSharpParser.Property_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.property_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty_declaration([NotNull] RSharpParser.Property_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicit_anonymous_function_parameter([NotNull] RSharpParser.Explicit_anonymous_function_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.explicit_anonymous_function_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicit_anonymous_function_parameter([NotNull] RSharpParser.Explicit_anonymous_function_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.remove_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemove_accessor_declaration([NotNull] RSharpParser.Remove_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.remove_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemove_accessor_declaration([NotNull] RSharpParser.Remove_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_or_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_or_type_name([NotNull] RSharpParser.Package_or_type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_or_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_or_type_name([NotNull] RSharpParser.Package_or_type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.generic_dimension_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneric_dimension_specifier([NotNull] RSharpParser.Generic_dimension_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.generic_dimension_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneric_dimension_specifier([NotNull] RSharpParser.Generic_dimension_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] RSharpParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] RSharpParser.IfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.local_variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_variable_declarator([NotNull] RSharpParser.Local_variable_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.local_variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_variable_declarator([NotNull] RSharpParser.Local_variable_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.parenthesisExpressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpressions([NotNull] RSharpParser.ParenthesisExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.parenthesisExpressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpressions([NotNull] RSharpParser.ParenthesisExpressionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] RSharpParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] RSharpParser.WhileStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_member_declaration([NotNull] RSharpParser.Package_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_member_declaration([NotNull] RSharpParser.Package_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_body([NotNull] RSharpParser.Method_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_body([NotNull] RSharpParser.Method_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter([NotNull] RSharpParser.Type_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter([NotNull] RSharpParser.Type_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_body([NotNull] RSharpParser.Interface_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_body([NotNull] RSharpParser.Interface_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant_declaration([NotNull] RSharpParser.Constant_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant_declaration([NotNull] RSharpParser.Constant_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.local_variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_variable_declaration([NotNull] RSharpParser.Local_variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.local_variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_variable_declaration([NotNull] RSharpParser.Local_variable_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.isExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsExpression([NotNull] RSharpParser.IsExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.isExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsExpression([NotNull] RSharpParser.IsExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.anonymous_function_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_function_body([NotNull] RSharpParser.Anonymous_function_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.anonymous_function_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_function_body([NotNull] RSharpParser.Anonymous_function_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constant_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant_declarator([NotNull] RSharpParser.Constant_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constant_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant_declarator([NotNull] RSharpParser.Constant_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.for_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_initializer([NotNull] RSharpParser.For_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.for_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_initializer([NotNull] RSharpParser.For_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.struct_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_body([NotNull] RSharpParser.Struct_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.struct_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_body([NotNull] RSharpParser.Struct_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.specific_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpecific_catch_clause([NotNull] RSharpParser.Specific_catch_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.specific_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpecific_catch_clause([NotNull] RSharpParser.Specific_catch_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] RSharpParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] RSharpParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_type([NotNull] RSharpParser.Class_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_type([NotNull] RSharpParser.Class_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.memberAccessStartExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccessStartExpression([NotNull] RSharpParser.MemberAccessStartExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.memberAccessStartExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccessStartExpression([NotNull] RSharpParser.MemberAccessStartExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_type([NotNull] RSharpParser.Numeric_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_type([NotNull] RSharpParser.Numeric_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.mixinStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMixinStatement([NotNull] RSharpParser.MixinStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.mixinStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMixinStatement([NotNull] RSharpParser.MixinStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] RSharpParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] RSharpParser.ExpressionStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] RSharpParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] RSharpParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.get_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGet_accessor_declaration([NotNull] RSharpParser.Get_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.get_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGet_accessor_declaration([NotNull] RSharpParser.Get_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.overloadable_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOverloadable_operator([NotNull] RSharpParser.Overloadable_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.overloadable_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOverloadable_operator([NotNull] RSharpParser.Overloadable_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_operator([NotNull] RSharpParser.Assignment_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_operator([NotNull] RSharpParser.Assignment_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessor_declarations([NotNull] RSharpParser.Accessor_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessor_declarations([NotNull] RSharpParser.Accessor_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.emptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement([NotNull] RSharpParser.EmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.emptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement([NotNull] RSharpParser.EmptyStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.catch_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatch_clauses([NotNull] RSharpParser.Catch_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.catch_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatch_clauses([NotNull] RSharpParser.Catch_clausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] RSharpParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] RSharpParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.defaultValueExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultValueExpression([NotNull] RSharpParser.DefaultValueExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.defaultValueExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultValueExpression([NotNull] RSharpParser.DefaultValueExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_regular_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_regular_string_part([NotNull] RSharpParser.Interpolated_regular_string_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_regular_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_regular_string_part([NotNull] RSharpParser.Interpolated_regular_string_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_modifiers([NotNull] RSharpParser.Method_modifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_modifiers([NotNull] RSharpParser.Method_modifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.constructor_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_initializer([NotNull] RSharpParser.Constructor_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.constructor_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_initializer([NotNull] RSharpParser.Constructor_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_base([NotNull] RSharpParser.Enum_baseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_base([NotNull] RSharpParser.Enum_baseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusive_or_expression([NotNull] RSharpParser.Exclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusive_or_expression([NotNull] RSharpParser.Exclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.global_attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobal_attribute_section([NotNull] RSharpParser.Global_attribute_sectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.global_attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobal_attribute_section([NotNull] RSharpParser.Global_attribute_sectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.nameofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameofExpression([NotNull] RSharpParser.NameofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.nameofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameofExpression([NotNull] RSharpParser.NameofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.orderby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderby_clause([NotNull] RSharpParser.Orderby_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.orderby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderby_clause([NotNull] RSharpParser.Orderby_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbeddedStatement([NotNull] RSharpParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbeddedStatement([NotNull] RSharpParser.EmbeddedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.finally_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinally_clause([NotNull] RSharpParser.Finally_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.finally_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinally_clause([NotNull] RSharpParser.Finally_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_body([NotNull] RSharpParser.Query_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_body([NotNull] RSharpParser.Query_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.restrictStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRestrictStatement([NotNull] RSharpParser.RestrictStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.restrictStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRestrictStatement([NotNull] RSharpParser.RestrictStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.variable_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declarators([NotNull] RSharpParser.Variable_declaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.variable_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declarators([NotNull] RSharpParser.Variable_declaratorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interface_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_definition([NotNull] RSharpParser.Interface_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interface_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_definition([NotNull] RSharpParser.Interface_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilation_unit([NotNull] RSharpParser.Compilation_unitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilation_unit([NotNull] RSharpParser.Compilation_unitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.parameter_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_array([NotNull] RSharpParser.Parameter_arrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.parameter_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_array([NotNull] RSharpParser.Parameter_arrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.variable_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_initializer([NotNull] RSharpParser.Variable_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.variable_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_initializer([NotNull] RSharpParser.Variable_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.labeledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabeledStatement([NotNull] RSharpParser.LabeledStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.labeledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabeledStatement([NotNull] RSharpParser.LabeledStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.add_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd_accessor_declaration([NotNull] RSharpParser.Add_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.add_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd_accessor_declaration([NotNull] RSharpParser.Add_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.usingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingStatement([NotNull] RSharpParser.UsingStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.usingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingStatement([NotNull] RSharpParser.UsingStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.mixin_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMixin_definition([NotNull] RSharpParser.Mixin_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.mixin_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMixin_definition([NotNull] RSharpParser.Mixin_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.group_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup_clause([NotNull] RSharpParser.Group_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.group_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup_clause([NotNull] RSharpParser.Group_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.whileElseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileElseStatement([NotNull] RSharpParser.WhileElseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.whileElseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileElseStatement([NotNull] RSharpParser.WhileElseStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_list([NotNull] RSharpParser.Statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_list([NotNull] RSharpParser.Statement_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_string_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_string_expression([NotNull] RSharpParser.Interpolated_string_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_string_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_string_expression([NotNull] RSharpParser.Interpolated_string_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.destructor_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDestructor_definition([NotNull] RSharpParser.Destructor_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.destructor_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDestructor_definition([NotNull] RSharpParser.Destructor_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.field_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_declaration([NotNull] RSharpParser.Field_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.field_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_declaration([NotNull] RSharpParser.Field_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.unsafeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsafeStatement([NotNull] RSharpParser.UnsafeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.unsafeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsafeStatement([NotNull] RSharpParser.UnsafeStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] RSharpParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] RSharpParser.ForStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_definition([NotNull] RSharpParser.Class_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_definition([NotNull] RSharpParser.Class_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_name([NotNull] RSharpParser.Member_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_name([NotNull] RSharpParser.Member_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.postDecrementExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostDecrementExpression([NotNull] RSharpParser.PostDecrementExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.postDecrementExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostDecrementExpression([NotNull] RSharpParser.PostDecrementExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_modifier([NotNull] RSharpParser.Method_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_modifier([NotNull] RSharpParser.Method_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_section([NotNull] RSharpParser.Attribute_sectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_section([NotNull] RSharpParser.Attribute_sectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.object_creation_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_creation_expression([NotNull] RSharpParser.Object_creation_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.object_creation_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_creation_expression([NotNull] RSharpParser.Object_creation_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.doStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoStatement([NotNull] RSharpParser.DoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.doStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoStatement([NotNull] RSharpParser.DoStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_list([NotNull] RSharpParser.Attribute_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_list([NotNull] RSharpParser.Attribute_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_verbatium_string([NotNull] RSharpParser.Interpolated_verbatium_stringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.interpolated_verbatium_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_verbatium_string([NotNull] RSharpParser.Interpolated_verbatium_stringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.enum_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_member_declaration([NotNull] RSharpParser.Enum_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.enum_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_member_declaration([NotNull] RSharpParser.Enum_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributes([NotNull] RSharpParser.AttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributes([NotNull] RSharpParser.AttributesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrom_clause([NotNull] RSharpParser.From_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrom_clause([NotNull] RSharpParser.From_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_list([NotNull] RSharpParser.Argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_list([NotNull] RSharpParser.Argument_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_type([NotNull] RSharpParser.Return_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_type([NotNull] RSharpParser.Return_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] RSharpParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] RSharpParser.ArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_clause([NotNull] RSharpParser.Where_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_clause([NotNull] RSharpParser.Where_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.literalAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralAccessExpression([NotNull] RSharpParser.LiteralAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.literalAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralAccessExpression([NotNull] RSharpParser.LiteralAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.array_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray_initializer([NotNull] RSharpParser.Array_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.array_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray_initializer([NotNull] RSharpParser.Array_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbedded_statement([NotNull] RSharpParser.Embedded_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbedded_statement([NotNull] RSharpParser.Embedded_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.sizeofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeofExpression([NotNull] RSharpParser.SizeofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.sizeofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeofExpression([NotNull] RSharpParser.SizeofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] RSharpParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] RSharpParser.BodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expression([NotNull] RSharpParser.Unary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expression([NotNull] RSharpParser.Unary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.class_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_base([NotNull] RSharpParser.Class_baseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.class_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_base([NotNull] RSharpParser.Class_baseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.simple_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_name([NotNull] RSharpParser.Simple_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.simple_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_name([NotNull] RSharpParser.Simple_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.accessor_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessor_modifier([NotNull] RSharpParser.Accessor_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.accessor_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessor_modifier([NotNull] RSharpParser.Accessor_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.implicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Implicit_anonymous_function_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.implicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicit_anonymous_function_parameter_list([NotNull] RSharpParser.Implicit_anonymous_function_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.gotoDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoDefaultStatement([NotNull] RSharpParser.GotoDefaultStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.gotoDefaultStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoDefaultStatement([NotNull] RSharpParser.GotoDefaultStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.select_or_group_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_or_group_clause([NotNull] RSharpParser.Select_or_group_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.select_or_group_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_or_group_clause([NotNull] RSharpParser.Select_or_group_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.binary_operator_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinary_operator_expression([NotNull] RSharpParser.Binary_operator_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.binary_operator_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinary_operator_expression([NotNull] RSharpParser.Binary_operator_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.for_iterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_iterator([NotNull] RSharpParser.For_iteratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.for_iterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_iterator([NotNull] RSharpParser.For_iteratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.global_attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobal_attribute_target([NotNull] RSharpParser.Global_attribute_targetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.global_attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobal_attribute_target([NotNull] RSharpParser.Global_attribute_targetContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_declaration([NotNull] RSharpParser.Method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_declaration([NotNull] RSharpParser.Method_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.yieldReturnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterYieldReturnStatement([NotNull] RSharpParser.YieldReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.yieldReturnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitYieldReturnStatement([NotNull] RSharpParser.YieldReturnStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.superAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuperAccessExpression([NotNull] RSharpParser.SuperAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.superAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuperAccessExpression([NotNull] RSharpParser.SuperAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.anonymousMethodExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousMethodExpression([NotNull] RSharpParser.AnonymousMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.anonymousMethodExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousMethodExpression([NotNull] RSharpParser.AnonymousMethodExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.objectOrDelegateCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectOrDelegateCreationExpression([NotNull] RSharpParser.ObjectOrDelegateCreationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.objectOrDelegateCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectOrDelegateCreationExpression([NotNull] RSharpParser.ObjectOrDelegateCreationExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_constraints_clause([NotNull] RSharpParser.Type_parameter_constraints_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_constraints_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_constraints_clause([NotNull] RSharpParser.Type_parameter_constraints_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.indexer_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexer_argument([NotNull] RSharpParser.Indexer_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.indexer_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexer_argument([NotNull] RSharpParser.Indexer_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.union_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnion_definition([NotNull] RSharpParser.Union_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.union_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnion_definition([NotNull] RSharpParser.Union_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.method_invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_invocation([NotNull] RSharpParser.Method_invocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.method_invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_invocation([NotNull] RSharpParser.Method_invocationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.default_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefault_member_declaration([NotNull] RSharpParser.Default_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.default_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefault_member_declaration([NotNull] RSharpParser.Default_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.postIncrementExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostIncrementExpression([NotNull] RSharpParser.PostIncrementExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.postIncrementExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostIncrementExpression([NotNull] RSharpParser.PostIncrementExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.floating_point_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloating_point_type([NotNull] RSharpParser.Floating_point_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.floating_point_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloating_point_type([NotNull] RSharpParser.Floating_point_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expression([NotNull] RSharpParser.Equality_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expression([NotNull] RSharpParser.Equality_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.fixed_parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_parameters([NotNull] RSharpParser.Fixed_parametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.fixed_parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_parameters([NotNull] RSharpParser.Fixed_parametersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] RSharpParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] RSharpParser.SwitchStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.delegate_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelegate_definition([NotNull] RSharpParser.Delegate_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.delegate_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelegate_definition([NotNull] RSharpParser.Delegate_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.adressofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdressofExpression([NotNull] RSharpParser.AdressofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.adressofExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdressofExpression([NotNull] RSharpParser.AdressofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.event_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvent_declaration([NotNull] RSharpParser.Event_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.event_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvent_declaration([NotNull] RSharpParser.Event_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.bracket_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracket_expression([NotNull] RSharpParser.Bracket_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.bracket_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracket_expression([NotNull] RSharpParser.Bracket_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.simpleNameExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleNameExpression([NotNull] RSharpParser.SimpleNameExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.simpleNameExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleNameExpression([NotNull] RSharpParser.SimpleNameExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_list([NotNull] RSharpParser.Expression_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_list([NotNull] RSharpParser.Expression_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.checkedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCheckedExpression([NotNull] RSharpParser.CheckedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.checkedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCheckedExpression([NotNull] RSharpParser.CheckedExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.import_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImport_directives([NotNull] RSharpParser.Import_directivesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.import_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImport_directives([NotNull] RSharpParser.Import_directivesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.gotoCaseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoCaseStatement([NotNull] RSharpParser.GotoCaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.gotoCaseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoCaseStatement([NotNull] RSharpParser.GotoCaseStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_target([NotNull] RSharpParser.Attribute_targetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_target([NotNull] RSharpParser.Attribute_targetContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.qualified_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_identifier([NotNull] RSharpParser.Qualified_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.qualified_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_identifier([NotNull] RSharpParser.Qualified_identifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.switch_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_section([NotNull] RSharpParser.Switch_sectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.switch_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_section([NotNull] RSharpParser.Switch_sectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.anonymous_function_signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_function_signature([NotNull] RSharpParser.Anonymous_function_signatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.anonymous_function_signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_function_signature([NotNull] RSharpParser.Anonymous_function_signatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_list([NotNull] RSharpParser.Type_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_list([NotNull] RSharpParser.Type_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] RSharpParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] RSharpParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.type_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_modifiers([NotNull] RSharpParser.Type_modifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.type_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_modifiers([NotNull] RSharpParser.Type_modifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.query_continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_continuation([NotNull] RSharpParser.Query_continuationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.query_continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_continuation([NotNull] RSharpParser.Query_continuationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] RSharpParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] RSharpParser.BreakStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.package_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackage_body([NotNull] RSharpParser.Package_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.package_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackage_body([NotNull] RSharpParser.Package_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.selfReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelfReferenceExpression([NotNull] RSharpParser.SelfReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.selfReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelfReferenceExpression([NotNull] RSharpParser.SelfReferenceExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.string_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_literal([NotNull] RSharpParser.String_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.string_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_literal([NotNull] RSharpParser.String_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.uncheckedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUncheckedExpression([NotNull] RSharpParser.UncheckedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.uncheckedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUncheckedExpression([NotNull] RSharpParser.UncheckedExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_definition([NotNull] RSharpParser.Struct_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_definition([NotNull] RSharpParser.Struct_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.accessor_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessor_body([NotNull] RSharpParser.Accessor_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.accessor_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessor_body([NotNull] RSharpParser.Accessor_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] RSharpParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] RSharpParser.ContinueStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.literalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpression([NotNull] RSharpParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.literalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpression([NotNull] RSharpParser.LiteralExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RSharpParser.rank_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRank_specifier([NotNull] RSharpParser.Rank_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RSharpParser.rank_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRank_specifier([NotNull] RSharpParser.Rank_specifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ICSharpCode.NRefactory.Rava.Parser
